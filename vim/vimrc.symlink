set nocompatible               " be iMproved
filetype off                   " required!

set shell=zsh

"""""""""""""""""""""""""""""""""""""
" PLUGINS
"""""""""""""""""""""""""""""""""""""

call plug#begin('~/.vim/plugged')

"" Tools
Plug 'airblade/vim-gitgutter' " shows a git diff in the gutter (sign column)
Plug 'rking/ag.vim' " RIP ack
Plug 'w0rp/ale' " like syntastic, but async
Plug 'sjl/gundo.vim', { 'on': 'GundoToggle' } " visualizes the undo tree
Plug 'tpope/vim-repeat' " enable repeating supported plugin maps with .
Plug 'tpope/vim-surround' " tool to change and add surroundings in pair
Plug 'editorconfig/editorconfig-vim' " http://editorconfig.org

"" Navigation
Plug 'christoomey/vim-tmux-navigator' " easier tmux navigating with Ctrl+h/j/k/l
Plug 'takac/vim-hardtime' " only allow one directional key per second

Plug 'nvim-lua/popup.nvim'
Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-telescope/telescope.nvim', { 'on': 'Telescope' }

"" Automagic
Plug 'raimondi/delimitMate' " provides insert mode auto-completion for quotes, parens, brackets, etc.

"" Display
Plug 'vim-airline/vim-airline' " lean & mean status/tabline for vim that's light as air
Plug 'vim-airline/vim-airline-themes' " themes for airline
Plug 'ntpeters/vim-better-whitespace' " highlights trailing whitespaces

Plug 'luochen1990/rainbow' " show diff level of parentheses in diff color

Plug 'chriskempson/vim-tomorrow-theme' " neat theme for vim

call plug#end()

"""""""""""""""""""""""""""""""""""""
" CONFIG
"""""""""""""""""""""""""""""""""""""

"" Look and feel
set termguicolors
if !has('nvim')
  " set Vim-specific sequences for RGB colors
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
endif
set background=dark
colorscheme Tomorrow-Night
syntax enable
set encoding=utf-8
set number
set ruler       " show the cursor position all the time
set cursorline  " highlight current line
set scrolloff=3 " provide some context when editing
"set foldmethod=syntax
set foldlevelstart=20
let g:vim_markdown_folding_disabled=1
let mapleader = "\<Space>"
" shows line numbers relative to the line currently on
set relativenumber
nnoremap <F5> :set relativenumber!<CR>
"nmap <silent> <F5> :exec &nu==&rnu? "se nu!" : "se rnu!"<CR>
"autocmd BufReadPost,FileReadPost,BufNewFile * call system("tmux rename-window %")

let g:rainbow_active=1

if has('nvim')
  highlight clear SpellCap
  highlight SpellCap guibg=#6871ff
  highlight clear SpellBad
  highlight SpellBad guibg=#ff6d67
  highlight clear SpellLocal
  highlight SpellLocal guibg=#5ffdff

  let g:python3_host_prog='/Users/ncaspar/projects/py3nvim/bin/python'
endif

au BufNewFile,BufRead *.pys set filetype=python

" Allow backgrounding buffers without writing them, and remember marks/undo
" for backgrounded buffers
set hidden

" http://robots.thoughtbot.com/how-to-copy-and-paste-with-tmux-on-mac-os-x
set clipboard=unnamed

" disable mouse
set mouse=

"" Searching
set hlsearch                      " highlight matches
set incsearch                     " incremental searching
set ignorecase                    " searches are case insensitive...
set smartcase                     " ... unless they contain at least one capital letter

"" Whitespace
set wrap                          " wrap lines
set tabstop=2                     " a tab is two spaces
set shiftwidth=2                  " an autoindent (with <<) is two spaces
set expandtab                     " use spaces, not tabs

""" vim-airline
"" detection of whitespace errors
let g:airline#extensions#whitespace#enabled = 1
" customize the whitespace symbol
let g:airline#extensions#whitespace#symbol = '!'
" configure which whitespace checks to enable
let g:airline#extensions#whitespace#checks = [ 'indent', 'trailing' ]
" configure whether a message should be displayed
let g:airline#extensions#whitespace#show_message = 1
" configure the formatting of the warning messages
let g:airline#extensions#whitespace#trailing_format = 'trailing[%s]'
let g:airline#extensions#whitespace#mixed_indent_format = 'mixed-indent[%s]'

" airline tabline
let g:airline#extensions#tabline#enabled = 1
" fancy airline statusbar
let g:airline_powerline_fonts = 1
set laststatus=2

"" delimitMate
let g:delimitMate_expand_cr = 2
let g:delimitMate_expand_space = 1
"let g:delimitMate_jump_expansion = 1

"" Paths
silent !mkdir -p ~/.vim/_backup ~/.vim/_temp ~/.vim/_undo
set backupdir=~/.vim/_backup    " where to put backup files.
set directory=~/.vim/_temp//    " where to put swap files.
set undodir=~/.vim/_undo        " where to save undo histories

"" undo history
set undofile
set undolevels=1000         " How many undos
set undoreload=10000        " number of lines to save for undo

"" Gundo
let g:gundo_prefer_python3 = 1
nnoremap <F6> :GundoToggle<CR>

set backspace=indent,eol,start

" git gutter symbols
let g:gitgutter_map_keys = 0
let g:gitgutter_sign_added = '⇒'
let g:gitgutter_sign_modified = '⇔'
let g:gitgutter_sign_removed = '⇐'
let g:gitgutter_sign_modified_removed = '⇐'

" Get off my lawn
let g:hardtime_default_on = 1
nnoremap <Left> :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up> :echoe "Use k"<CR>
nnoremap <Down> :echoe "Use j"<CR>

" nice and sexy profiling hotkeys
nnoremap <silent> <leader>DD :exe ":profile start profile.log"<cr>:exe ":profile func *"<cr>:exe ":profile file *"<cr>
nnoremap <silent> <leader>DQ :exe ":profile pause"<cr>:noautocmd qall!<cr>

" tags
set tags=./.tags;
"let g:easytags_dynamic_files = 2
nmap <leader>t :tag <C-r><C-w><CR>
nmap <leader>p :pop<CR>

set timeoutlen=1000 ttimeoutlen=0

let g:indentLine_char = '︙'
let g:indentLine_color_term = 239

let g:clang_library_path = '/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libclang.dylib'

" cycle through buffers
nmap <leader>h :bprev<CR>
nmap <leader>l :bnext<CR>
nmap <leader>d :bdelete<CR>

nmap <leader>q :quit<CR>

" ALE
let g:ale_cpp_cc_options = '-std=c++17 -Wall'

" Find files using Telescope command-line sugar.
nnoremap <leader>ff <cmd>Telescope find_files<cr>
nnoremap <leader>fg <cmd>Telescope live_grep<cr>
nnoremap <leader>fb <cmd>Telescope buffers<cr>
nnoremap <leader>fh <cmd>Telescope help_tags<cr>
