# Colors

# Use the xterm-256color terminal
set -g default-terminal "screen-256color"

# Apply Tc
set-option -ga terminal-overrides ",screen-256color:Tc"

# Ring the bell if any background window rang a bell
set -g bell-action any

# Start numbering with 1
set -g base-index 1

# Moar history
set -g history-limit 100000

# http://robots.thoughtbot.com/how-to-copy-and-paste-with-tmux-on-mac-os-x
#set-option -g default-command "reattach-to-user-namespace -l zsh"

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key v split-window -h -c '#{pane_current_path}'
bind-key s split-window -c '#{pane_current_path}'

# Reload key
bind-key r source-file ~/.tmux.conf

# Clear buffer
bind-key k clear-history

# New session
bind-key ^N new
bind-key ^F new

# Enable mouse
set -g mouse on
#set -g mouse-utf8 on

# https://www.johnhawthorn.com/2012/09/vi-escape-delays/
set-option -sg escape-time 10

# status on top
#set -g status-position top

# status line
#set -g status-utf8 on
set -g status-justify left
set -g status-bg black
set -g status-fg white
set -g status-interval 4

# messaging
set -g message-style fg=black,bg=yellow
set -g message-command-style fg=blue,bg=black

#window mode
setw -g mode-style bg=colour6,fg=colour0

# window status
setw -g window-status-format "#[fg=colour8]#[bg=white] #I #[bg=colour8]#[fg=white] #W "
setw -g window-status-current-format "#[fg=black]#[bg=colour7] #I #[fg=black]#[bg=colour15] #W "
setw -g window-status-current-style bg=black,bold

# Info on right
set -g status-right "#[fg=magenta]#(sysctl -n vm.loadavg | cut -d \" \" -f 2-4) #[fg=white]| #[fg=yellow]Tmux:#S #[fg=white]| #[fg=green]%Y-%m-%d #[fg=white]| #[fg=cyan]%A %l:%M %p"
set -g status-right-length 62

# Info on left (no session display)
set -g status-left ''

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "pbcopy"

# Allows you to press page up in normal mode and have it scroll back into the history
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -T copy-mode PPage send -X page-up
bind-key -T copy-mode NPage send -X page-down

# Very similar to page up, except for the mouse wheel
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
bind-key -T copy-mode WheelUpPane send -X halfpage-up
bind-key -T copy-mode WheelDownPane send -X halfpage-down

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-'\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# cluster ssh stuff
#bind-key ^S command-prompt -p "cluster" "new-window -n %1 '$HOME/bin/tssh %1'"
bind-key a set-window-option synchronize-panes

# layout
bind-key '\' select-layout even-vertical
bind-key | select-layout even-horizontal
